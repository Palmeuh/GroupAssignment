@using Microsoft.AspNetCore.Identity

@inject SignInManager<MyUser> SignInManager
@inject UserManager<MyUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        @if (User.IsInRole("Administrator"))
        {
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Manage
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    <a class="dropdown-item text-dark" asp-page="/Administration/ManageUsers">Manage Users</a>
                    <a class="dropdown-item text-dark" asp-page="/Administration/ManageRoles">Manage Roles</a>
                </div>
            </li>
        }
        @if (User.IsInRole("Organizer") || User.IsInRole("Administrator"))
        {
            <li class="nav-item">
                <a style="background-color:limegreen; color:white; " class="nav-link text-dark" asp-area="" asp-page="/Events/Create">Add Event</a>
            </li>
        }
        <li class="nav-item">
            <a id="manage" class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        <li class="nav-item">
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/Index", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" id="register" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" id="login" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
